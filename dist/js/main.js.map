{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["const header = document.querySelector('[data-header]');\r\nconst main = document.querySelector('[data-main]');\r\nconst selectionModal = document.querySelector('[data-modal-selection]');\r\nconst form = document.querySelector('[data-form]');\r\nconst reward = {\r\n  item: null,\r\n  container: null,\r\n  content: null,\r\n  contentHeight: 0,\r\n};\r\nconst observer = new ResizeObserver(verifyContentResize);\r\n\r\nheader.addEventListener('click', checkHeaderClick);\r\nmain.addEventListener('click', checkMainClick);\r\nmain.addEventListener('change', checkMainChange);\r\nform.addEventListener('submit', evt => {\r\n  evt.preventDefault();\r\n});\r\n\r\nfunction checkHeaderClick({ target }) {\r\n  if (target.hasAttribute('data-toggle-menu') || target.hasAttribute('data-overlay')) {\r\n    return toggleMobileMenu();\r\n  }\r\n}\r\n\r\nfunction checkMainClick({ target }) {\r\n  if (target.hasAttribute('data-button-bookmark')) {\r\n    return toggleBookmark();\r\n  }\r\n  if (target.hasAttribute('data-cto-selection')) {\r\n    return openSelectionModal();\r\n  }\r\n  if (target.hasAttribute('data-close-selection')) {\r\n    return closeSelectionModal();\r\n  }\r\n  if (target.hasAttribute('data-modal-selection')) {\r\n    return closeSelectionModal();\r\n  }\r\n}\r\n\r\nfunction checkMainChange({ target }) {\r\n  if (target.hasAttribute('data-reward-radio')) {\r\n    rewardSelected(target);\r\n    return;\r\n  }\r\n}\r\n\r\n// Mobile Navigation Menu\r\nfunction toggleMobileMenu() {\r\n  const nav = document.querySelector('[data-nav]');\r\n  const button = document.querySelector('[data-toggle-menu]');\r\n\r\n  toggleActive(nav);\r\n  const isActive = nav.classList.contains('active');\r\n\r\n  button.setAttribute('aria-expanded', isActive);\r\n  button.setAttribute('aria-pressed', isActive);\r\n  if (isActive) return;\r\n  nav.classList.add('closing');\r\n  nav.addEventListener('animationend', toggleClosing);\r\n}\r\n\r\n// Bookmark Button\r\nfunction toggleBookmark() {\r\n  const isBookmarked = !JSON.parse(localStorage.getItem('bookmark'));\r\n  const html = document.documentElement;\r\n\r\n  localStorage.setItem('bookmark', isBookmarked);\r\n  html.dataset.bookmark = isBookmarked;\r\n  setToggleBookmarkAttributes();\r\n}\r\n\r\nsetToggleBookmarkAttributes();\r\nfunction setToggleBookmarkAttributes() {\r\n  const isBookmarked = JSON.parse(localStorage.getItem('bookmark'));\r\n  const button = document.querySelector('[data-button-bookmark]');\r\n\r\n  button.setAttribute('aria-pressed', isBookmarked);\r\n  if (isBookmarked) {\r\n    button.setAttribute('aria-label', 'Remove bookmark');\r\n  } else {\r\n    button.setAttribute('aria-label', 'Add bookmark');\r\n  }\r\n}\r\n\r\n// Selection Modal\r\nfunction openSelectionModal() {\r\n  toggleActive(selectionModal);\r\n}\r\n\r\nfunction closeSelectionModal() {\r\n  toggleActive(selectionModal);\r\n  selectionModal.classList.add('closing');\r\n  selectionModal.addEventListener('animationend', toggleClosing);\r\n}\r\n\r\nfunction rewardSelected(target) {\r\n  if (reward.item !== null) collapseContainer();\r\n  setReward(target);\r\n  expandContainer();\r\n}\r\n\r\nfunction setReward(radioInput) {\r\n  reward.item = radioInput.closest('[data-reward-item]');\r\n  reward.container = reward.item.querySelector('[data-wrapper-grow]');\r\n  reward.content = reward.container.firstElementChild;\r\n}\r\n\r\nfunction expandContainer() {\r\n  toggleActive(reward.item);\r\n  setContainerHeight();\r\n  setResizeObserver();\r\n  toggleDisabled();\r\n}\r\n\r\nfunction collapseContainer() {\r\n  toggleActive(reward.item);\r\n  setContainerHeight(0);\r\n  removeResizeObserver();\r\n  toggleDisabled();\r\n}\r\n\r\n// Helpers\r\nfunction toggleActive(element) {\r\n  element.classList.toggle('active');\r\n}\r\n\r\nfunction toggleClosing() {\r\n  this.classList.toggle('closing');\r\n  this.removeEventListener('animationend', toggleClosing);\r\n}\r\n\r\nfunction setContainerHeight(height = getContentHeight()) {\r\n  const { container } = reward;\r\n  container.style.maxHeight = `${height}px`;\r\n}\r\n\r\nfunction getContentHeight() {\r\n  const { height } = reward.content.getBoundingClientRect();\r\n  reward.contentHeight = height;\r\n  return height;\r\n}\r\n\r\nfunction verifyContentResize(entries) {\r\n  const elementBlockSize = entries[0].borderBoxSize[0].blockSize;\r\n  if (elementBlockSize === reward.contentHeight) return;\r\n  setContainerHeight();\r\n}\r\n\r\nfunction setResizeObserver() {\r\n  const { content } = reward;\r\n  observer.observe(content);\r\n}\r\n\r\nfunction removeResizeObserver() {\r\n  const { content } = reward;\r\n  observer.unobserve(content);\r\n}\r\n\r\nfunction toggleDisabled() {\r\n  const { content } = reward;\r\n  const inputs = content.querySelectorAll('input');\r\n\r\n  inputs.forEach(input => {\r\n    input.toggleAttribute('disabled');\r\n  });\r\n}\r\n"],"file":"main.js"}